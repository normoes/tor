name: DockerHub Publish

on:
  push:
    branches: [ master ]
  pull_request:
    branches:
      - master
  workflow_dispatch:  # manual trigger (through website)
  repository_dispatch:  # manual trigger (through API request)
    types: [master]
  # weekly
  schedule:
    - cron: '0 0 * * 0'
  # create:
  #   tags:
  #     - "*"

env:
  IMAGE_NAME: normoes/tor


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # - name: Get latest tor master commit hash
      #   run:  |
      #     echo "BUILD_BRANCH=$(curl -s https://api.github.com/repos/normoes/tor/branches/master  | grep -i sha | awk 'NR==1{print $2}' | tr -d "\",")" >> $GITHUB_ENV
      #     # echo "CLONE_BRANCH=master" >> $GITHUB_ENV
      #   # if: github.ref == 'refs/heads/master'
      #   if:  |
      #     github.ref == 'refs/heads/master' ||
      #     github.event.action == 'master'

      - name: Log into Dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Pull final image if it exists
        run: docker pull $IMAGE_NAME || true

      - name: Build updated final image if necessary
        run: docker build --pull
          --cache-from $IMAGE_NAME
          -f ./Dockerfile
          -t $IMAGE_NAME:latest .

      - name: Get tor and torsocks versions from within the image
        run:  |
          echo "TOR_VERSION=$(docker run --rm -t --entrypoint='' normoes/tor tor --version | head -n 1 | tr -d '.' | cut -d ' ' -f3 | tr -d '\t\r\n ')" >> $GITHUB_ENV
          echo "TORSOCKS_VERSION=$(docker run --rm -t --entrypoint='' normoes/tor torsocks --version | head -n 1 | tr -d '.' | cut -d ' ' -f2 | tr -d '\t\r\n ')" >> $GITHUB_ENV

      - name: Push the image tagged with latest
        run: docker push $IMAGE_NAME:latest

      # - name: Also tag the image with the master commit hash
      #   run: docker tag $IMAGE_NAME:latest $IMAGE_NAME:${{ env.BUILD_BRANCH }}

      # - name: And push the image with the master commit hash
      #   run: docker push $IMAGE_NAME:${{ env.BUILD_BRANCH }}

      - name: Also tag the image with the version tag
        run: docker tag $IMAGE_NAME:latest $IMAGE_NAME:${TOR_VERSION}_${TORSOCKS_VERSION}

      - name: And push the image with the version tag
        run: docker push $IMAGE_NAME:${TOR_VERSION}_${TORSOCKS_VERSION}
